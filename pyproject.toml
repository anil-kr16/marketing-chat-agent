[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "marketing-chat-agent"
version = "1.0.0"
description = "AI-powered marketing campaign generation agent using LangGraph"
authors = [
    {name = "Marketing Agent Team", email = "team@marketingagent.ai"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial :: Marketing",
    "Topic :: Communications :: Email",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
keywords = ["marketing", "ai", "langgraph", "campaign", "social-media", "email"]

dependencies = [
    "langchain>=0.1.0",
    "langchain-openai>=0.1.0",
    "langgraph>=0.1.0",
    "langsmith>=0.1.0",
    "openai>=1.0.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.20.0",
    "jinja2>=3.1.0",
    "pillow>=10.0.0",
    "requests>=2.31.0",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

email = [
    "google-auth>=2.17.0",
    "google-auth-oauthlib>=1.0.0",
    "google-auth-httplib2>=0.2.0",
    "google-api-python-client>=2.80.0",
]

social = [
    "facebook-sdk>=3.1.0",
    "tweepy>=4.14.0",
    "linkedin-api>=2.0.0",
]

all = [
    "marketing-chat-agent[dev,email,social]"
]

[project.urls]
Homepage = "https://github.com/yourusername/marketing-chat-agent"
Documentation = "https://github.com/yourusername/marketing-chat-agent/blob/main/README.md"
Repository = "https://github.com/yourusername/marketing-chat-agent"
"Bug Tracker" = "https://github.com/yourusername/marketing-chat-agent/issues"

[project.scripts]
marketing-agent = "runnables.chat_full_marketing_agent:main"
fast-marketing-agent = "runnables.chat_fast_marketing_agent:main"
marketing-api = "API.app.main:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "runnables*", "API*"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests that require external services",
    "email: Tests that require email configuration",
    "api: Tests for API endpoints",
]

[tool.coverage.run]
source = ["src", "runnables", "API"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
